cardindex.go
app.go
mainwindow.go # TODO
actions.go
fileactions.go # TODO
editactions.go # TODO
cardactions.go # TODO
# TODO boxactions.go
# TODO searchactions.go
# TODO viewactions.go
# TODO windowactions.go
# TODO helpactions.go
gui.go
config.go # TODO MostRecentFile & RecentFiles
model.go
model_config.go
model_cards.go
model_boxes.go
model_searches.go
model_search.go
model_types.go
model_orderby.go
db.go
static.go

cardindex_test.go

go.mod

sql/prepare.sql
sql/create.sql

README.md

build.sh
st.sh

# TODO config load/save last .cix file
# TODO config recentfiles + file menu recent files handling
# TODO complete Search, View, Window, Help, Edit menus
# TODO More shortcuts?

# TODO 4 MDI window types (each with its own unique type-specific icon):

# Name (of Card)  (X)
# Body
# ...
# [Boxes          v] # non-editable list of boxes this card belongs to
# |__Created__| |__Updated__|
# # Context Menu: New | Save | Add to Box… | Remove from Box… | Unhide |
#                 Hide | Delete

# SearchText        (X)
# Match [SearchText                      ]
# In (*) Visible cards ( ) Hidden cards
# Order by [   Name v] # Updated | Created
# ... use a vertical splitter, Search at the top List of cards below ...
# Card Name1
# Card Name2
#     :
# 0 cards match
# # Context Menu: New | Save | Add Cards to Box… | Delete
#   # Add to Box pops up dialog where user can enter new box name or 
#   # choose an existing box to add all the matched cards to obviously
#   # disable if 0 cards match

# Boxes           (X) # list of boxes
# Box Name1
# Box Name2
#    :
# # Context Menu: New… | Add Cards from Search… | Add Cards from Box… |
#		  Delete 

# Name (of View)        (X)
# Order by [   Name v] # Updated | Created
# ... use a vertical splitter, Search at the top List of cards below ...
# Card Name1
# Card Name2
#     :
# 0 cards match
# # Context Menu: New | Save | Add Cards to Box… | Delete
# # Views are: Visible Cards | Unboxed Cards | Hidden Cards

# TODO Help text (HTML with pandoc or asciidoctor or PDF with lout?)

# NOTE Possible addition: 
#   &Edit
#     &Find… ^F # In: All | Box (choice) | Search (choice) | Card (choice)
#     Find &Again F3
#     &Replace…
# NOTE Markup is CommonMark

# NOTE Could do "fields" using key=value syntax and searches like this:
#   SELECT rowid AS cid FROM vt_fts_cards WHERE vt_fts_cards MATCH '"key="';
# or
#   SELECT Name, Cards.Body FROM Cards, vt_fts_cards
#	WHERE vt_fts_cards MATCH '"key="' AND Cards.cid = vt_fts_cards.ROWID;

# NOTE consider TUI version e.g., using
# https://pkg.go.dev/github.com/rivo/tview &
# (example: https://github.com/BekBrace/inv-tui-go & 
# https://dev.to/bekbrace/build-tui-application-with-go-tview-l18)

# vim: syn=yaml
